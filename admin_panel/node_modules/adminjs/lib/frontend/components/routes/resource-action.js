import React, { useState } from 'react';
import { connect } from 'react-redux';
import { useParams } from 'react-router';
import BaseActionComponent from '../app/base-action-component.js';
import { actionHasDisabledComponent } from '../../interfaces/index.js';
import { NoResourceError, NoActionError } from '../app/error-message.js';
import { ActionHeader } from '../app/index.js';
import Wrapper from './utils/wrapper.js';
import DrawerPortal from '../app/drawer-portal.js';
import FilterDrawer from '../app/filter-drawer.js';
import allowOverride from '../../hoc/allow-override.js';
const ResourceAction = props => {
  const params = useParams();
  const {
    resources
  } = props;
  const {
    resourceId,
    actionName
  } = params;
  const [filterVisible, setFilterVisible] = useState(false);
  const [tag, setTag] = useState('');
  const resource = resources.find(r => r.id === resourceId);
  if (!resource) {
    return /*#__PURE__*/React.createElement(NoResourceError, {
      resourceId: resourceId
    });
  }
  const action = resource.resourceActions.find(r => r.name === actionName);
  if (!action || actionHasDisabledComponent(action)) {
    return /*#__PURE__*/React.createElement(NoActionError, {
      resourceId: resourceId,
      actionName: actionName
    });
  }
  const toggleFilter = action.showFilter ? () => setFilterVisible(!filterVisible) : undefined;
  if (action.showInDrawer) {
    return /*#__PURE__*/React.createElement(DrawerPortal, {
      width: action.containerWidth
    }, /*#__PURE__*/React.createElement(BaseActionComponent, {
      action: action,
      resource: resource
    }));
  }
  return /*#__PURE__*/React.createElement(Wrapper, {
    width: action.containerWidth,
    showFilter: action.showFilter
  }, /*#__PURE__*/React.createElement(ActionHeader, {
    resource: resource,
    action: action,
    toggleFilter: toggleFilter,
    tag: tag
  }), /*#__PURE__*/React.createElement(BaseActionComponent, {
    action: action,
    resource: resource,
    setTag: setTag
  }), action.showFilter ? /*#__PURE__*/React.createElement(FilterDrawer, {
    key: filterVisible.toString(),
    resource: resource,
    isVisible: filterVisible,
    toggleFilter: toggleFilter
  }) : '');
};
const mapStateToProps = state => ({
  resources: state.resources
});
export default allowOverride(connect(mapStateToProps)(ResourceAction), 'ResourceActionRoute');